{"version":3,"sources":["components/HighlightedText.js","components/Substance.js","components/OCR.js","App.js","serviceWorker.js","index.js"],"names":["HighlightedText","annotations","map","element","entity_type","token","react_default","a","createElement","className","id","this","annotateText","props","Component","socket","socketIOClient","path","Substance","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","text","searchFor","_this2","on","data","setState","tokens","console","log","error","errorMessage","event","target","value","emit","searchItems","onChange","handleTextChange","bind","type","handleSearchChange","onClick","handleSubmit","index_es","icon","faSearch","color","src_components_HighlightedText","OCR","onChangeHandler","selectedFile","files","fileURL","URL","createObjectURL","loaded","onClickHandler","loading","FormData","append","axios","post","then","res","statusText","extracted_text","resultText","languageDetected","language_detected","translatedText","translated_text","catch","split","i","key","method","action","src","style","maxHeight","maxWidth","alt","multiple","renderResults","App","react_router_dom","to","react_router","exact","component","height","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4QAsBeA,8LAlBEC,GAET,OAAOA,EAAYC,IAAI,SAAAC,GACnB,MAA4B,KAAxBA,EAAQC,YACD,IAAMD,EAAQE,MAAQ,IAE1BC,EAAAC,EAAAC,cAAA,QAAMC,UAAWN,EAAQC,aAAzB,IAAwCD,EAAQE,MAAhD,wCAIX,OACIC,EAAAC,EAAAC,cAAA,OAAKE,GAAG,2BACFC,KAAKC,aAAaD,KAAKE,MAAMZ,qBAbjBa,sBCGxBC,QAASC,GAAe,6BAA8B,CAC1DC,KAAM,sBAiFOC,cA7EX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAT,KAAAO,IACVC,EAAAC,OAAAE,EAAA,EAAAF,CAAAT,KAAAS,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAb,QACKc,MAAQ,CACXC,KAAM,GACNzB,YAAa,GACb0B,UAAW,IALHR,mFASQ,IAAAS,EAAAjB,KAClBI,EAAOc,GAAG,iBAAkB,SAACC,GACzBF,EAAKG,SAAS,CAAE9B,YAAa6B,EAAKE,QAAU,WAC1CC,QAAQC,IAAIN,EAAKH,MAAMxB,iBAG7Bc,EAAOc,GAAG,QAAS,SAACM,GAClBF,QAAQC,IAAIC,GACVP,EAAKG,SAAS,CACZI,OAAS,EACTC,aAAgB,gGAKPC,GACf1B,KAAKoB,SAAS,CAACL,KAAMW,EAAMC,OAAOC,mDAGjBF,GACjB1B,KAAKoB,SAAS,CAACJ,UAAWU,EAAMC,OAAOC,6CAG5BF,GACXJ,QAAQC,IAAI,gBACZnB,EAAOyB,KAAK,gBAAiB,CAACd,KAAMf,KAAKc,MAAMC,KAAMe,YAAa9B,KAAKc,MAAME,6CAI7E,OACArB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,aAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,gHAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,iBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAhB,UADF,QAEEH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,aAFF,QAGEH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,iBAHF,QAIEH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,SAJF,QAKEH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,SALF,QAMEH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,WAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,YAAUE,GAAG,kBAAkBD,UAAU,SAAS8B,MAAO5B,KAAKc,MAAMC,KAAMgB,SAAU/B,KAAKgC,iBAAiBC,KAAKjC,SAEjHL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,qBAAqBD,UAAU,UACnCH,EAAAC,EAAAC,cAAA,SAAOqC,KAAK,OAAON,MAAO5B,KAAKc,MAAME,UAAWe,SAAU/B,KAAKmC,mBAAmBF,KAAKjC,QACvFL,EAAAC,EAAAC,cAAA,UAAQqC,KAAK,SAASE,QAASpC,KAAKqC,aAAaJ,KAAKjC,OACpDL,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAiBC,KAAOC,IAAWC,MAAM,eAG/C9C,EAAAC,EAAAC,cAAC6C,EAAD,CAAiBpD,YAAeU,KAAKc,MAAMxB,wBAvEnCa,uCC2HTwC,cAhIX,SAAAA,EAAYzC,GAAO,IAAAM,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAT,KAAA2C,IACfnC,EAAAC,OAAAE,EAAA,EAAAF,CAAAT,KAAAS,OAAAG,EAAA,EAAAH,CAAAkC,GAAA9B,KAAAb,KAAME,KAWV0C,gBAAgB,SAAAlB,GACZlB,EAAKY,SAAS,CACVyB,aAAcnB,EAAMC,OAAOmB,MAAM,GACjCC,QAASC,IAAIC,gBAAgBvB,EAAMC,OAAOmB,MAAM,IAChDI,OAAQ,KAhBG1C,EAmBnB2C,eAAiB,WACb3C,EAAKY,SAAS,CACVgC,SAAS,IAEb,IAAMjC,EAAO,IAAIkC,SACjBlC,EAAKmC,OAAO,OAAQ9C,EAAKM,MAAM+B,cAC/BU,IAAMC,KAAK,6CAA8CrC,EAAM,IAE1DsC,KAAK,SAAAC,GACFpC,QAAQC,IAAImC,EAAIC,YAChBrC,QAAQC,IAAImC,EAAIvC,KAAKyC,gBACrBpD,EAAKY,SAAS,CACVyC,WAAYH,EAAIvC,KAAKyC,eACrBE,iBAAkBJ,EAAIvC,KAAK4C,kBAC3BC,eAAgBN,EAAIvC,KAAK8C,gBACzBb,SAAS,EACT5B,OAAO,MAGd0C,MAAM,SAAA1C,GACHF,QAAQC,IAAIC,GACZhB,EAAKY,SAAS,CACVK,aAAc,uDACd2B,SAAS,EACT5B,OAAO,OAzCjBhB,EAAKM,MAAQ,CACX+B,aAAc,KACdgB,WAAY,GACZC,iBAAkB,GAClBE,eAAgB,GAChBvC,aAAc,GACd2B,SAAS,GARE5C,+EAiDf,OAAGR,KAAKc,MAAMsC,QAGVzD,EAAAC,EAAAC,cAAA,0BAGKG,KAAKc,MAAMU,MAEZ7B,EAAAC,EAAAC,cAAA,OAAKE,GAAG,iBACHC,KAAKc,MAAMW,cAIdzB,KAAKc,MAAMkD,eAIZhE,KAAKc,MAAMkD,eAAe,IAAM,CAAC,KACtC1C,QAAQC,IAAIvB,KAAKc,MAAMkD,gBAEnBrE,EAAAC,EAAAC,cAAA,OAAKE,GAAG,mBACFC,KAAKc,MAAM+C,WAAWM,MAAM,MAAM5E,IAAI,SAAC6E,EAAEC,GACvC,OAAO1E,EAAAC,EAAAC,cAAA,OAAKwE,IAAKA,GAAMD,KAE3BzE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BANJ,KAM+BG,KAAKc,MAAMgD,iBACtCnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,wBATJ,KASyBG,KAAKc,MAAMkD,iBAKpCrE,EAAAC,EAAAC,cAAA,OAAKE,GAAG,mBAAR,0BApBGJ,EAAAC,EAAAC,cAAA,6CA6BX,OACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,iBAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,uEAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,eAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,QAAMyE,OAAO,OAAOC,OAAO,IAAIxE,GAAG,KAC9BJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,qBACEE,KAAKc,MAAM+B,aACRlD,EAAAC,EAAAC,cAAA,OAAKE,GAAG,gBAAgByE,IAAKxE,KAAKc,MAAMiC,QAAS0B,MAAO,CAACC,UAAW,QAASC,SAAU,QAASC,IAAI,YAEpG,GACLjF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASoC,KAAK,OAAO2C,SAAS,GAAG9C,SAAU/B,KAAK4C,oBAGzEjD,EAAAC,EAAAC,cAAA,UAAQqC,KAAK,SAASpC,UAAU,4BAA4BsC,QAASpC,KAAKmD,gBAA1E,WAEJxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACTE,KAAK8E,0BAzHb3E,aCoCH4E,mLA5BX,OACIpF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACArF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,mBACNJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,OAAOyE,IAAI,YAAYI,IAAI,eACnCjF,EAAAC,EAAAC,cAAA,MAAIE,GAAG,gBACLJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAMC,GAAG,KAAT,cAEFtF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAMC,GAAG,SAAT,WAKRtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAO5E,KAAK,IAAI6E,OAAK,EAACC,UAAW7E,IACjCZ,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAO5E,KAAK,QAAQ8E,UAAWzC,MAGjChD,EAAAC,EAAAC,cAAA,OAAK4E,MAAO,CAACY,OAAQ,mBAxBblF,aCGEmF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjG,EAAAC,EAAAC,cAACgG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzC,KAAK,SAAA0C,GACjCA,EAAaC","file":"static/js/main.cdbc08fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport'./HighlightedText.css';\r\n\r\nclass HighlightedText extends Component {\r\n    annotateText(annotations){\r\n        // console.log(element);\r\n        return annotations.map(element => {\r\n            if (element.entity_type === \"\"){\r\n                return \" \" + element.token + \" \";\r\n            }\r\n            return <span className={element.entity_type}> {element.token} </span>\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <div id=\"highlighted-text-output\">\r\n                { this.annotateText(this.props.annotations) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HighlightedText;","import React, {Component} from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport HighlightedText from './HighlightedText';\r\nimport socketIOClient from \"socket.io-client\";\r\nconst socket = socketIOClient(\"http://104.211.9.147:5000/\", {\r\n  path: '/entity_extractor'\r\n});\r\n\r\nclass Substance extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          text: '',\r\n          annotations: [],\r\n          searchFor: ''\r\n        };\r\n      }\r\n    \r\n      componentDidMount() {\r\n        socket.on(\"found_entities\", (data) => {\r\n            this.setState({ annotations: data.tokens }, () => {\r\n              console.log(this.state.annotations);\r\n            });\r\n        });\r\n        socket.on('error', (error) => {\r\n          console.log(error);\r\n            this.setState({\r\n              \"error\": true,\r\n              \"errorMessage\": \"Unfortunately an error occured, please try again\"\r\n            })\r\n        });\r\n      }\r\n    \r\n      handleTextChange(event) {\r\n        this.setState({text: event.target.value});\r\n      }\r\n    \r\n      handleSearchChange(event) {\r\n        this.setState({searchFor: event.target.value})\r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        console.log('handleSubmit');\r\n        socket.emit('find_entities', {text: this.state.text, searchItems: this.state.searchFor});\r\n      }\r\n    \r\n    render() {\r\n        return(\r\n        <div>\r\n            <div className=\"center title-wrapper\">\r\n              <h1 className=\"title-text\">\r\n                Substance\r\n              </h1>\r\n              <h2 className=\"product-description\">\r\n                Describe large digital collections quickly and efficiently using Substance, an intelligent entity extractor.\r\n              </h2>\r\n              <h2 className=\"title-text\">\r\n                Our Offerings\r\n              </h2>\r\n              <div className=\"legend-container\">\r\n                <span className=\"PERSON\">People</span> &nbsp; \r\n                <span className=\"GPE\">Locations</span> &nbsp;\r\n                <span className=\"ORG\">Organizations</span> &nbsp; \r\n                <span className=\"DATE\">Dates</span> &nbsp; \r\n                <span className=\"TIME\">Times</span> &nbsp; \r\n                <span className=\"MONEY\">Money</span>  \r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <textarea id=\"input-text-area\" className=\"center\" value={this.state.text} onChange={this.handleTextChange.bind(this)}/>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div id=\"search-box-wrapper\" className=\"center\">\r\n                    <input type=\"text\" value={this.state.searchFor} onChange={this.handleSearchChange.bind(this)}/>\r\n                    <button type=\"submit\" onClick={this.handleSubmit.bind(this)}>\r\n                      <FontAwesomeIcon icon={ faSearch } color=\" #ff267c\"/>\r\n                    </button>\r\n                </div>\r\n                <HighlightedText annotations = {this.state.annotations} />\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Substance;","import React, { Component } from 'react';\r\nimport './OCR.css';\r\nimport axios from 'axios';\r\n\r\nclass OCR extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n          this.state = {\r\n            selectedFile: null,\r\n            resultText: '',\r\n            languageDetected: '',\r\n            translatedText: '',\r\n            errorMessage: '',\r\n            loading: false\r\n          }\r\n       \r\n      }\r\n    onChangeHandler=event=>{\r\n        this.setState({\r\n            selectedFile: event.target.files[0],\r\n            fileURL: URL.createObjectURL(event.target.files[0]),\r\n            loaded: 0,\r\n          });\r\n    }\r\n    onClickHandler = () => {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        const data = new FormData() ;\r\n        data.append('file', this.state.selectedFile);\r\n        axios.post(\"http://104.211.9.147:5001/tamil_ocr/upload\", data, { // receive two parameter endpoint url ,form data \r\n            })\r\n            .then(res => { // then print response status\r\n                console.log(res.statusText);\r\n                console.log(res.data.extracted_text);\r\n                this.setState({\r\n                    resultText: res.data.extracted_text,\r\n                    languageDetected: res.data.language_detected,\r\n                    translatedText: res.data.translated_text,\r\n                    loading: false,\r\n                    error: false\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({\r\n                    errorMessage: \"Unfortunately an error has occured, please try again\",\r\n                    loading: false,\r\n                    error: true\r\n                })\r\n            });\r\n    }\r\n\r\n    renderResults() {\r\n        if(this.state.loading) {\r\n            // Show loading bar\r\n            return(\r\n            <div>\r\n                Loading ...\r\n            </div>);\r\n        }else if(this.state.error){\r\n            return(\r\n                <div id=\"error-message\">\r\n                    {this.state.errorMessage}\r\n                </div>\r\n            );\r\n        }\r\n        else if( !this.state.translatedText ){\r\n            return(<div>\r\n\r\n            </div>);\r\n        }else if(this.state.translatedText[0] != [\"\"]) {\r\n            console.log(this.state.translatedText);\r\n            return(\r\n                <div id=\"ocr-results-div\">\r\n                    { this.state.resultText.split(\"\\n\").map((i,key) => {\r\n                        return <div key={key}>{i}</div>;\r\n                    })}\r\n                    <br />\r\n                    <br />\r\n                    <b>Language detected</b>: {this.state.languageDetected}\r\n                    <br />\r\n                    <br />\r\n                    <b>Translation</b>: {this.state.translatedText}\r\n                </div>\r\n            );\r\n        }else{\r\n            return(\r\n                <div id=\"ocr-results-div\">\r\n                    No text found in image\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className=\"center title-wrapper\">\r\n                <h1 className=\"title-text\">\r\n                    OCR Solutions\r\n                </h1>\r\n                <h2 className=\"product-description\">\r\n                    Extract useful insights from images containing textual information.\r\n                </h2>\r\n                <h2 className=\"title-text\">\r\n                    Try it out\r\n                </h2>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <form method=\"post\" action=\"#\" id=\"#\">\r\n                            <div>\r\n                                <h3 className=\"center\">Upload Your File </h3>\r\n                                { this.state.selectedFile ? \r\n                                    (<img id=\"preview-image\" src={this.state.fileURL} style={{maxHeight: \"300px\", maxWidth: \"100%\"}} alt=\"preview\" />) \r\n                                    : \r\n                                    (\"\") }\r\n                                <input className=\"center\" type=\"file\" multiple=\"\" onChange={this.onChangeHandler} />\r\n                            </div>\r\n                        </form>\r\n                        <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={this.onClickHandler}>Upload</button> \r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        { this.renderResults() }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OCR;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\nimport Substance from './components/Substance';\r\nimport OCR from './components/OCR';\r\n// get our fontawesome imports\r\n// import { search } from \"@fortawesome\";\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n        <div>\r\n          <Router>\r\n          <nav>\r\n            <div id=\"nav-bar-wrapper\">\r\n              <img id=\"logo\" src=\"/logo.png\" alt=\"logo &amp;Data\"/>\r\n              <ul id=\"nav-bar-list\">\r\n                <li className=\"nav-bar-item\">\r\n                  <Link to=\"/\">Substance</Link>\r\n                </li>\r\n                <li className=\"nav-bar-item\">\r\n                  <Link to=\"/ocr/\">OCR</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n          <div className=\"container\">\r\n            <Route path=\"/\" exact component={Substance} />\r\n            <Route path=\"/ocr/\" component={OCR} />\r\n          </div>\r\n          </Router>\r\n          <div style={{height: '100px'}}>\r\n\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}