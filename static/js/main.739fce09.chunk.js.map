{"version":3,"sources":["components/HighlightedText.js","components/Substance.js","components/OCR.js","App.js","serviceWorker.js","index.js"],"names":["HighlightedText","annotations","map","element","entity_type","token","react_default","a","createElement","className","id","this","annotateText","props","Component","socket","socketIOClient","path","Substance","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","text","searchFor","_this2","on","data","setState","tokens","console","log","error","errorMessage","event","target","value","emit","searchItems","onChange","handleTextChange","bind","type","handleSearchChange","onClick","handleSubmit","index_es","icon","faSearch","color","src_components_HighlightedText","OCR","onChangeHandler","selectedFile","files","fileURL","URL","createObjectURL","loaded","onClickHandler","loading","FormData","append","axios","post","then","res","statusText","extracted_text","resultText","languageDetected","language_detected","translatedText","translated_text","catch","split","i","key","method","action","src","style","maxHeight","maxWidth","alt","multiple","renderResults","App","react_router_dom","to","react_router","exact","component","height","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.739fce09.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport'./HighlightedText.css';\n\nclass HighlightedText extends Component {\n    annotateText(annotations){\n        // console.log(element);\n        return annotations.map(element => {\n            if (element.entity_type === \"\"){\n                return \" \" + element.token + \" \";\n            }\n            return <span className={element.entity_type}> {element.token} </span>\n        });\n    }\n    render(){\n        return(\n            <div id=\"highlighted-text-output\">\n                { this.annotateText(this.props.annotations) }\n            </div>\n        );\n    }\n}\n\nexport default HighlightedText;","import React, {Component} from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nimport HighlightedText from './HighlightedText';\nimport socketIOClient from \"socket.io-client\";\nconst socket = socketIOClient(\"http://104.211.9.147:5000/\", {\n  path: '/entity_extractor'\n});\n\nclass Substance extends Component {\n    constructor() {\n        super();\n        this.state = {\n          text: '',\n          annotations: [],\n          searchFor: ''\n        };\n      }\n    \n      componentDidMount() {\n        socket.on(\"found_entities\", (data) => {\n            this.setState({ annotations: data.tokens }, () => {\n              console.log(this.state.annotations);\n            });\n        });\n        socket.on('error', (error) => {\n          console.log(error);\n            this.setState({\n              \"error\": true,\n              \"errorMessage\": \"Unfortunately an error occured, please try again\"\n            })\n        });\n      }\n    \n      handleTextChange(event) {\n        this.setState({text: event.target.value});\n      }\n    \n      handleSearchChange(event) {\n        this.setState({searchFor: event.target.value})\n      }\n    \n      handleSubmit(event) {\n        console.log('handleSubmit');\n        socket.emit('find_entities', {text: this.state.text, searchItems: this.state.searchFor});\n      }\n    \n    render() {\n        return(\n        <div>\n            <div className=\"center title-wrapper\">\n              <h1 className=\"title-text\">\n                Substance\n              </h1>\n              <h2 className=\"product-description\">\n                Describe large digital collections quickly and efficiently using Substance, an intelligent entity extractor.\n              </h2>\n              <h2 className=\"title-text\">\n                Our Offerings\n              </h2>\n              <div className=\"legend-container\">\n                <span className=\"PERSON\">People</span> &nbsp; \n                <span className=\"GPE\">Locations</span> &nbsp;\n                <span className=\"ORG\">Organizations</span> &nbsp; \n                <span className=\"DATE\">Dates</span> &nbsp; \n                <span className=\"TIME\">Times</span> &nbsp; \n                <span className=\"MONEY\">Money</span>  \n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <textarea id=\"input-text-area\" className=\"center\" value={this.state.text} onChange={this.handleTextChange.bind(this)}/>\n              </div>\n              <div className=\"col-md-6\">\n                <div id=\"search-box-wrapper\" className=\"center\">\n                    <input type=\"text\" value={this.state.searchFor} onChange={this.handleSearchChange.bind(this)}/>\n                    <button type=\"submit\" onClick={this.handleSubmit.bind(this)}>\n                      <FontAwesomeIcon icon={ faSearch } color=\" #ff267c\"/>\n                    </button>\n                </div>\n                <HighlightedText annotations = {this.state.annotations} />\n                </div>\n            </div>\n        </div>);\n    }\n}\n\nexport default Substance;","import React, { Component } from 'react';\nimport './OCR.css';\nimport axios from 'axios';\n\nclass OCR extends Component {\n    constructor(props) {\n        super(props);\n          this.state = {\n            selectedFile: null,\n            resultText: '',\n            languageDetected: '',\n            translatedText: '',\n            errorMessage: '',\n            loading: false\n          }\n       \n      }\n    onChangeHandler=event=>{\n        this.setState({\n            selectedFile: event.target.files[0],\n            fileURL: URL.createObjectURL(event.target.files[0]),\n            loaded: 0,\n          });\n    }\n    onClickHandler = () => {\n        this.setState({\n            loading: true\n        });\n        const data = new FormData() ;\n        data.append('file', this.state.selectedFile);\n        axios.post(\"http://104.211.9.147:5001/tamil_ocr/upload\", data, { // receive two parameter endpoint url ,form data \n            })\n            .then(res => { // then print response status\n                console.log(res.statusText);\n                console.log(res.data.extracted_text);\n                this.setState({\n                    resultText: res.data.extracted_text,\n                    languageDetected: res.data.language_detected,\n                    translatedText: res.data.translated_text,\n                    loading: false,\n                    error: false\n                })\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({\n                    errorMessage: \"Unfortunately an error has occured, please try again\",\n                    loading: false,\n                    error: true\n                })\n            });\n    }\n\n    renderResults() {\n        if(this.state.loading) {\n            // Show loading bar\n            return(\n            <div>\n                Loading ...\n            </div>);\n        }else if(this.state.error){\n            return(\n                <div id=\"error-message\">\n                    {this.state.errorMessage}\n                </div>\n            );\n        }\n        else if( !this.state.translatedText ){\n            return(<div>\n\n            </div>);\n        }else if(this.state.translatedText[0] != [\"\"]) {\n            console.log(this.state.translatedText);\n            return(\n                <div id=\"ocr-results-div\">\n                    { this.state.resultText.split(\"\\n\").map((i,key) => {\n                        return <div key={key}>{i}</div>;\n                    })}\n                    <br />\n                    <br />\n                    <b>Language detected</b>: {this.state.languageDetected}\n                    <br />\n                    <br />\n                    <b>Translation</b>: {this.state.translatedText}\n                </div>\n            );\n        }else{\n            return(\n                <div id=\"ocr-results-div\">\n                    No text found in image\n                </div>\n            );\n        }\n\n    }\n\n    render() {\n        return(\n            <div>\n                <div className=\"center title-wrapper\">\n                <h1 className=\"title-text\">\n                    OCR Solutions\n                </h1>\n                <h2 className=\"product-description\">\n                    Extract useful insights from images containing textual information.\n                </h2>\n                <h2 className=\"title-text\">\n                    Try it out\n                </h2>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <form method=\"post\" action=\"#\" id=\"#\">\n                            <div>\n                                <h3 className=\"center\">Upload Your File </h3>\n                                { this.state.selectedFile ? \n                                    (<img id=\"preview-image\" src={this.state.fileURL} style={{maxHeight: \"300px\", maxWidth: \"100%\"}} alt=\"preview\" />) \n                                    : \n                                    (\"\") }\n                                <input className=\"center\" type=\"file\" multiple=\"\" onChange={this.onChangeHandler} />\n                            </div>\n                        </form>\n                        <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={this.onClickHandler}>Upload</button> \n                    </div>\n                    <div className=\"col-md-6\">\n                        { this.renderResults() }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default OCR;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Substance from './components/Substance';\nimport OCR from './components/OCR';\n// get our fontawesome imports\n// import { search } from \"@fortawesome\";\n\nclass App extends Component {\n  \n  render() {\n    return (\n        <div>\n          <Router>\n          <nav>\n            <div id=\"nav-bar-wrapper\">\n              <img id=\"logo\" src=\"/logo.png\" alt=\"logo &amp;Data\"/>\n              <ul id=\"nav-bar-list\">\n                <li className=\"nav-bar-item\">\n                  <Link to=\"/\">Substance</Link>\n                </li>\n                <li className=\"nav-bar-item\">\n                  <Link to=\"/ocr/\">OCR</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <div className=\"container\">\n            <Route path=\"/\" exact component={Substance} />\n            <Route path=\"/ocr/\" component={OCR} />\n          </div>\n          </Router>\n          <div style={{height: '100px'}}>\n\n          </div>\n        </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}